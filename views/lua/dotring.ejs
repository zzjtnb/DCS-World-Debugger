<!DOCTYPE html>
<html lang="zh-Hans">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>
    <%= title %>
  </title>
  <%- include('../common/head'); -%>
    <link rel="stylesheet" href="/css/agate.css">
</head>

<body>
  <div class="flex h-screen bg-gray-200">
    <div id="side" class="fixed z-20 inset-0 bg-black opacity-50 transition-opacity lg:hidden" onclick="t2()"></div>
    <%- include('../layout/sidebar'); -%>
      <div class="flex-1 flex flex-col overflow-hidden">
        <%- include('../layout/header'); -%>
          <main class="flex-1 overflow-x-hidden overflow-y-auto bg-gray-200">
            <div class="container mx-auto px-6 pt-8">
              <div class="editor">
                <div class="textarea">
                  <textarea autocomplete="off" placeholder="请输入内容" class="textarea__inner" id="textarea"></textarea>
                </div>
                <div class="text-center my-2">
                  <h1 class="text-gray-600 text-lg font-black">当前运行环境:<span class="setting">server</span></h1>
                  <div class="flex items-center justify-center">
                    <div class="inline-block relative w-30 text-center my-2">
                      <select
                        class="block appearance-none w-full bg-white border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline state"
                        onchange="gradeChange()">
                        <option>server</option>
                        <option>mission</option>
                        <option>net</option>
                        <option>export</option>
                        <option>config</option>
                      </select>
                      <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700">
                        <svg class="fill-current h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20">
                          <path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z" />
                        </svg>
                      </div>
                    </div>
                  </div>
                  <div class="flex text-left space-x-5">
                    <p class="border-dotted border-4 border-green-500">
                      -- 'server': 多游戏时当前运行的任务是什么,仅服务器(holds the
                      current mission when
                      multiplayer?
                      server only)
                      <br />
                      return DCS.getRealTime()或者env.info('测试LUA')
                    </p>
                    <p class="border-dotted border-4 border-green-500">-- 'config':
                      游戏安装目录下/Config/main.cfg的执行状态,以及用于配置设置的保存的游戏目录下/Config/autoexec.cfg. (the
                      state in which $INSTALL_DIR/Config/main.cfg is executed, as well as
                      $WRITE_DIR/Config/autoexec.cfg. used for configuration settings)
                    </p class="border-dotted border-4 border-green-500">
                    <p class="border-dotted border-4 border-green-500">--'mission':当前运行的任务(holds current mission)</p>
                    <p class="border-dotted border-4 border-green-500">
                      --'export':运行保存的游戏目录下/Scripts/Export.lua和相关的导出API(runs
                      $WRITE_DIR/Scripts/Export.lua and
                      the relevant export API) </p>
                    <p class="border-dotted border-4 border-green-500">server:既能运行DCS server中的API也能运行任务环境的API</p>
                  </div>
                  <div class="flex items-center justify-center m-2">
                    <button type="button" class="bg-blue-500 button button--primary is-round focus:outline-none"
                      onclick="sendLua()">
                      <span>发送</span>
                    </button>
                    <button type="button" class="bg-red-600	 button button--primary is-round focus:outline-none"
                      onclick="clearLua()">
                      <span>清空</span>
                    </button>
                  </div>
                  <div class="flex justify-center flex-col ">
                    <!-- <button type="submit" class="bg-blue-500 button button--primary is-round block focus:outline-none "
onclick="sendLua()">
<span>发送</span>
</button>
<button type="reset" class="bg-purple-600 button button--primary is-round block my-2 focus:outline-none"
onclick="clearLua()">
<span>清空</span>
</button> -->
                    <button
                      class="bg-red-500 bg-green-500 button button--primary is-round status cursor-not-allowed block focus:outline-none font-black text-lg leading-4">
                      <span class="statusValue">执行状态</span>
                    </button>
                  </div>
                </div>
              </div>
            </div>
            <div class="result">
              <pre><code  id='dcsValue'></code></pre>
            </div>
          </main>
      </div>
      <%- include('../common/toast',{user: '顶顶顶' }); -%>
  </div>
</body>
<script src="/js/common.js"></script>
<script src="/socket.io/socket.io.js"></script>
<script src="/js/highlight.min.js"></script>

<script>
  var socket = io();
  let textarea =
    "local JSON = require('JSON')\nlocal res = {}\nres.name = {}\nres.id = {}\nfor i, tb in pairs(world.getAirbases()) do\nres.id[i] = Object.getName(tb)\nres.name[i] = tb:getName()\nend\nreturn JSON:encode(res)";
  document.querySelector("#textarea").value = textarea;
  // 发送消息
  function sendMessage(event, data) {
    socket.open(); // 开始连接socket
    socket.emit(event, data);
  };

  function gradeChange(params) {
    let myselect = document.querySelector(".state");
    let index = myselect.selectedIndex;
    document.querySelector(".setting").innerHTML = myselect.options[index].text
  }

  function sendLua() {
    let luaValue = document.querySelector("#textarea").value
    if (luaValue) {
      // let str = luaValue.replace(/\r{0,}\n/g, ' ');
      let myselect = document.querySelector(".state");
      let index = myselect.selectedIndex; // selectedIndex代表的是你所选中项的index
      let luaStr = {
        type: 'net_dostring',
        env: myselect.options[index].text,
        content: luaValue
      };
      this.sendMessage('debuggerLua', luaStr);
      socket.on('net_dostring', (data) => {
        let element = document.querySelector('.status');
        let statusValue = document.querySelector('.statusValue');
        document.querySelector('#dcsValue').innerHTML = JSON.stringify(data.data)
        document.querySelectorAll('pre code').forEach((block) => {
          hljs.highlightBlock(block);
        });

        if (data.status) {
          removeClass(element, 'bg-red-500');
          addClass(element, 'bg-green-500');
          statusValue.innerHTML = "执行成功,时间:" + data.timeS.os;
        } else {
          addClass(element, 'bg-red-500')
          removeClass(element, 'bg-green-500')
          statusValue.innerHTML = "执行失败"
        }
      });
    } else {
      // alert("请输入内容")
      let element = document.querySelector('#toast');
      removeClass(element, 'hidden')
    }
  }

  function clearLua() {
    document.querySelector("#textarea").value = ''
    let parent = document.querySelector("#dcsValue")
    while (parent.firstChild) {
      parent.removeChild(parent.firstChild);
    }
  }
</script>

</html>